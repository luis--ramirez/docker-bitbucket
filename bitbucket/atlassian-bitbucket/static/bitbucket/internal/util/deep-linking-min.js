define("bitbucket/internal/util/deep-linking",["lodash","bitbucket/internal/util/function","bitbucket/internal/util/math","exports"],function(b,e,g,f){function h(a,c,d,e){if(0===d)return a+c;var f=e[d-1];if(c!==f+1)return"-"===b.last(a)&&(a+=f),a+","+c;"-"!==b.last(a)&&(a+="-");d===e.length-1&&(a+=c);return a}f.hashToLineNumbers=function(a){a=null!=a?a.replace(/[#\s]/g,""):"";return/^[0-9,\-]+$/.test(a)?b.chain(a.split(",")).filter().map(function(a){a=b.chain(a.split("-")).map(e.unary(parseInt)).filter(e.not(isNaN)).map(g.highPass(1)).sortBy().value();
return a.length?b.range(b.first(a),b.last(a)+1):[]}).flatten().uniq().sortBy().value():[]};f.lineNumbersToHash=function(a){return b.chain(a).uniq().filter(e.and(b.isNumber,b.isFinite,g.isPositive)).sortBy().reduce(h,"").value()};f.updateSelectionRange=function(a,c){var d;c=b.extend({existingLineNumbers:[],selectRange:!1,lastSelected:void 0},c);c.selectRange&&c.lastSelected?(d=b.range(Math.min(a,c.lastSelected),Math.max(a,c.lastSelected)+1),d=b.difference(d,c.existingLineNumbers).length?c.existingLineNumbers.concat(d):
b.difference(c.existingLineNumbers,b.without(d,a))):d=b.contains(c.existingLineNumbers,a)?b.without(c.existingLineNumbers,a):c.existingLineNumbers.concat(a);return b.chain(d).uniq().sortBy().value()}});