define("bitbucket/internal/bbui/json-validation/json-validation",["module","exports","lodash"],function(h,g,k){function e(a,c){var b="";c&&(b='For property: "'+c+'". ');throw Error(""+b+a);}function d(a,c){if(!a)return f.default.identity;if("string"===typeof a||a instanceof String){var b=function(){a+="";var b=a.indexOf("?"),c=!1;if(-1!==b){if(0!==b&&b!==a.length-1)throw Error('Type unexpectedly contains a "?" in the middle: '+a);c=!0;a=a.split("?")[b?0:1]}return{v:function(b,d){if(null==b){if(c)return;
e("Value was null, but expected non-nullable type "+a,d)}("undefined"===typeof b?"undefined":babelHelpers.typeof(b))===a||"function"===typeof b&&"object"===a||e("The typeof "+b+" is "+("undefined"===typeof b?"undefined":babelHelpers.typeof(b))+" but expected it to be "+a+" "+(c&&"or value to be null")+".",d)}}}();if("object"===("undefined"===typeof b?"undefined":babelHelpers.typeof(b)))return b.v}if(f.default.isArray(a)||a===Array)if(b=function(){var b=a!==Array&&a[0]?d(a[0],c):f.default.identity;
return{v:function(a,c){f.default.isArray(a)||e("Array type expected, but null or non-Array value provided.",c);a.forEach(function(a,d){return b(a,""+(c?c+".":"")+d)})}}}(),"object"===("undefined"===typeof b?"undefined":babelHelpers.typeof(b)))return b.v;if(a===Object||a&&"object"===("undefined"===typeof a?"undefined":babelHelpers.typeof(a)))if(b=function(){var b=a===Object?[]:Object.keys(a).map(function(b){return[b,d(a[b],""+(c?c+".":"")+b)]});return{v:function(a,c){a&&"object"===("undefined"===typeof a?
"undefined":babelHelpers.typeof(a))||"function"===typeof a||e("Object expected, but null or non-Object value provided.",c);b.forEach(function(b){b=babelHelpers.slicedToArray(b,2);var d=b[0];(0,b[1])(a[d],""+(c?c+".":"")+d)})}}}(),"object"===("undefined"===typeof b?"undefined":babelHelpers.typeof(b)))return b.v;if("function"===typeof a)return a;e("Invalid descriptor: Expected type "+a+". Should be falsy, String, Array, Object, or function.",c)}Object.defineProperty(g,"__esModule",{value:!0});g.default=
d;var f=babelHelpers.interopRequireDefault(k);d.asEnum=function(a,c){return function(b){if(!Object.keys(c).some(function(a){return c[a]===b}))throw Error("Invalid "+a+". Expected one of "+Object.keys(c).join(", ")+", but got "+b);}};d.nullable=function(a){var c=d(a);return function(a){null!=a&&c(a)}};d.recurse=function(a){var c=void 0;return function(b){c||(c=d(a()));c(b)}};d.strictEqual=function(a){return function(c){if(c!==a)throw Error("Expected "+a+" but was "+c);}};h.exports=g["default"]});