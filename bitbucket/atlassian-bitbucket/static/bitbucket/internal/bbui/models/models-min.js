define("bitbucket/internal/bbui/models/models",["exports","lodash","../json-validation/json-validation"],function(a,f,g){Object.defineProperty(a,"__esModule",{value:!0});a.permission=a.file_text=a.file_metadata=a.changeset=a.task=a.comment=a.pull_request=a.participant=a.reviewer=a.author=a.BranchStability=a.PullRequestState=a.SelfAction=a.ApprovalState=a.UserRole=a.ParticipantRole=a.ref=a.RefType=a.repository=a.project=a.user=a.scmId=a.ProjectType=a.UserType=a.person=void 0;var c=babelHelpers.interopRequireDefault(f),
b=babelHelpers.interopRequireDefault(g);g=a.person={email_address:"string?",name:"string"};f=a.UserType={NORMAL:"NORMAL",SERVICE:"SERVICE"};var m=a.ProjectType={NORMAL:"NORMAL",PERSONAL:"PERSONAL"},n=a.scmId={GIT:"git",HG:"hg"},h=a.user=c.default.extend({},g,{avatar_url:"string",display_name:"string",is_active:"boolean",is_admin:"boolean",slug:"string?",type:b.default.asEnum("UserType",f)}),v=a.project={id:"string",name:"string",key:"string",description:"string?",type:b.default.asEnum("ProjectType",
m),owner:b.default.nullable(h),is_public:"boolean"},k=a.repository={id:"string",name:"string",slug:"string",is_forkable:"boolean",is_public:"boolean",origin:b.default.nullable(b.default.recurse(function(){return k})),scm_id:b.default.asEnum("scmId",n)},p=a.RefType={TAG:"tag",BRANCH:"branch",COMMIT:"commit"},l=a.ref={id:"string",display_id:"string",type:b.default.asEnum("RefType",p),is_default:"boolean",latest_commit:"string?",repository:b.default.nullable(k)},d=a.ParticipantRole={AUTHOR:"author",
REVIEWER:"reviewer",PARTICIPANT:"participant"};a.UserRole=d;var q=a.ApprovalState={APPROVED:"APPROVED",NEEDS_WORK:"NEEDS_WORK",UNAPPROVED:"UNAPPROVED"},w=a.SelfAction={ADD_SELF:"ADD_SELF",REMOVE_SELF:"REMOVE_SELF"},r=a.PullRequestState={OPEN:"OPEN",MERGED:"MERGED",DECLINED:"DECLINED"},x=a.BranchStability={STABLE:"stable",UNSTABLE:"unstable"},e={user:h,role:b.default.asEnum("Role",d),state:b.default.asEnum("ApprovalState",q)},t=a.author=c.default.extend({},e,{role:b.default.strictEqual(d.AUTHOR)}),
u=a.reviewer=c.default.extend({},e,{role:b.default.strictEqual(d.REVIEWER)}),c=a.participant=c.default.extend({},e,{role:b.default.strictEqual(d.PARTICIPANT)}),e=a.pull_request={author:t,description:"string?",description_as_html:"string?",created_date:"string",comment_count:"number",from_ref:l,id:"string?",participants:[c],reviewers:[u],state:b.default.asEnum("PullRequestState",r),task_count:"number",title:"string?",titleHtml:"string?",to_ref:l,updated_date:"string",version:"number?"},y=a.comment=
{},z=a.task={},A=a.changeset={},B=a.file_metadata={},C=a.file_text={},b=a.permission={name:b.default.asEnum("permission",{KNOWN_USER:"KNOWN_USER",REPO_READ:"REPO_READ",REPO_WRITE:"REPO_WRITE",REPO_ADMIN:"REPO_ADMIN",SYS_ADMIN:"SYS_ADMIN"}),project_id:"string?",project_key:"string?",repository_id:"string?",repository_slug:"string?"};a.default={ApprovalState:q,BranchStability:x,ProjectType:m,PullRequestState:r,RefType:p,ParticipantRole:d,SelfAction:w,scmId:n,UserRole:d,UserType:f,author:t,changeset:A,
comment:y,file_metadata:B,file_text:C,participant:c,permission:b,person:g,project:v,pull_request:e,ref:l,repository:k,reviewer:u,task:z,user:h}});