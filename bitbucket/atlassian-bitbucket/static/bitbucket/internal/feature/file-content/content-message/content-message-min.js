define("bitbucket/internal/feature/file-content/content-message",["aui","lodash","bitbucket/internal/util/events","exports"],function(e,g,f,d){d.renderConflict=function(c,b){c.append(bitbucket.internal.feature.fileContent.contentMessage.conflict({titleContent:e.escapeHtml(b.getConflict().getConflictMessage()),nodeType:b.getNodeType()}))};d.renderEmptyDiff=function(c,b,a){c.append(bitbucket.internal.feature.fileContent.contentMessage.emptyDiff({fileChangeType:a.getType(),whitespace:b.whitespace}));
var d=a.getCommitRange().getSinceRevision();a=a.getCommitRange().getUntilRevision();f.trigger("bitbucket.internal.feature.fileContent.emptyDiffShown",{containerEl:c.get(0),sourcePath:b.source,sinceRevision:d&&d.toJSON(),destinationPath:b.destination,untilRevision:a&&a.toJSON()})};d.renderEmptyFile=function(c,b,a){c.append(bitbucket.internal.feature.fileContent.contentMessage.emptyFile());a=a.commitRange.untilRevision;f.trigger("bitbucket.internal.feature.fileContent.emptyFileShown",{containerEl:c.get(0),
path:b.path,commit:a})};d.renderErrors=function(c,b){var a=b&&b.errors&&b.errors.length?b.errors:[{message:e.I18n.getText("bitbucket.web.repository.content.unknown.error")}];c.append(g.map(a,bitbucket.internal.feature.fileContent.contentMessage.error).join(""))};d.renderTooLargeDiff=function(c,b,a,d){a=a.getCommitRange();var e=a.getPullRequest();c.append(bitbucket.internal.feature.fileContent.contentMessage.tooLargeDiff({filePath:b.destination?b.destination.toString:b.source.toString,revisionId:!e&&
a.getUntilRevision()&&a.getUntilRevision().getId(),parentRevisionId:!e&&a.getSinceRevision()&&a.getSinceRevision().getId(),sideBySideDiffEnabled:d}))}});