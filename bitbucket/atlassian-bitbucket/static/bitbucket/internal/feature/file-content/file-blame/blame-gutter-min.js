define("bitbucket/internal/feature/file-content/file-blame/blame-gutter","jquery lodash bitbucket/util/events bitbucket/util/state bitbucket/internal/bbui/widget/widget bitbucket/internal/feature/file-content/diff-view-segment-types bitbucket/internal/util/css bitbucket/internal/util/object".split(" "),function(h,k,r,m,n,l,t,u){function p(a){var b=m.getRepository(),d=m.getFilePath().components.join("/");a=a.map(function(c){var a={spannedLines:c.spannedLines,filePath:d,repository:b,commit:k.extend({id:c.commitHash,
displayId:c.displayCommitHash},c)},e=[];e[c.lineNumber]=h(bitbucket.internal.feature.fileContent.fileBlameGutterDetailed(a))[0];if(1===c.spannedLines)return{commitId:c.commitHash,els:e};var q=h(bitbucket.internal.feature.fileContent.fileBlameGutterSpan(a))[0];e.push(q);return{commitId:c.commitHash,els:e.concat(k.times(c.spannedLines-2,function(){return q.cloneNode(!0)}))}});var e=h.extend.apply(h,[[]].concat(k.pluck(a,"els"))),e={byLine:e,byCommitId:{},all:k.compact(e)};k.transform(a,function(a,b){a[b.commitId]=
a[b.commitId]?a[b.commitId].concat(k.compact(b.els)):k.compact(b.els)},e.byCommitId);return e}function v(a,b,d){var e=[];return d.eachLine(function(c){var d,g;switch(c.lineType){case void 0:d=a[c.lineNumber];g=c.handles.SOURCE;break;case l.ADDED:d=a[c.line.destination];g=c.handles.TO;break;case l.REMOVED:d=b[c.line.source];g=c.handles.FROM;break;case l.CONTEXT:b?(d=b[c.line.source],g=c.handles.FROM):(d=a[c.line.destination],g=c.handles.TO)}e.push([g,"blame",d])}).then(function(){return e})}function f(a,
b){n.call(this);this._enabled=!1;this._textView=a;this._requestBlame=b;this._pendingChanges=[];var d=this;this._textView.on("change",function(a){d._pendingChanges?d._pendingChanges.push(a):d._fillForChange(a)});this._textView.addContainerClass("blame-disabled");this._textView.registerGutter("blame",{weight:0})}u.inherits(f,n);f.prototype.setEnabled=function(a){a=Boolean(a);var b;if(this._enabled!==a&&(this._enabled=a,this._enabled===a)){a?(this._textView.removeContainerClass("blame-disabled"),b=this._fillGutter()):
(this._textView.addContainerClass("blame-disabled"),b=h.Deferred().resolve());var d=this;b.done(function(){r.trigger("bitbucket.internal.feature.fileContent.fileBlameExpandedStateChanged",null,d._enabled)})}return b||h.Deferred().resolve()};f.prototype._addHoverBehavior=function(a){function b(a){if(a.target===this&&(a=this.getAttribute("data-commitid"),clearTimeout(g),f!==a)){c&&c();f=a;var b=e[a],d;500>b.length?(b.addClass("commitid-hovered"),d=b.removeClass.bind(b,"commitid-hovered")):d=t.appendRule('.blame.bitbucket-gutter-marker[data-commitid\x3d"'+
a+'"] {background-color: #f5f5f5;border-right-color: #3b73af;}');c=function(){d();c=f=null}}}function d(a){a.target===this&&c&&(g=setTimeout(function(){c&&c()},100))}var e=k.transform(a.byCommitId,function(a,b,c){a[c]=h(b)},{}),c,f,g;a.all.forEach(function(a){a.addEventListener("mouseenter",b);a.addEventListener("mouseleave",d)});this._addDestroyable(function(){c&&c()})};f.prototype._fillForChange=function(a){var b=this;v(this._untilBlameElCache&&this._untilBlameElCache.byLine,this._sinceBlameElCache&&
this._sinceBlameElCache.byLine,a).done(function(a){b._textView.operation(function(){a.forEach(function(a){a[2]&&b._textView.setGutterMarker.apply(b._textView,a)})})})};f.prototype._fillGutter=function(){if(this._gutterFilled)return h.Deferred().resolve();this._gutterFilled=!0;var a=this;return this._requestBlame.get().done(function(b,d){b&&(a._untilBlameElCache=p(b),a._addHoverBehavior(a._untilBlameElCache));d&&(a._sinceBlameElCache=p(d),a._addHoverBehavior(a._sinceBlameElCache));a._textView.operation(function(){a._pendingChanges.forEach(a._fillForChange.bind(a))});
a._pendingChanges=null})};return f});