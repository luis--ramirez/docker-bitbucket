define("bitbucket/internal/feature/commit/difftree/difftree-search","aui bacon jquery lodash bitbucket/internal/feature/commit/difftree/difftree-search-input bitbucket/internal/model/path bitbucket/internal/model/path-and-line bitbucket/internal/util/bacon bitbucket/internal/util/events bitbucket/internal/util/function bitbucket/internal/util/promise bitbucket/internal/util/shortcuts exports".split(" "),function(m,k,n,h,v,w,x,y,p,q,z,A,l){function r(a,d){return{length:a.length,indexOf:function(b,
c){return d?b.indexOf(a,c):b.toLowerCase().indexOf(a.toLowerCase(),c)}}}function t(a,d){var b=d.indexOf(a);a=30<b?"..."+a.substring(b-30):a;for(var c=0,e="",g=0;c<a.length&&100>g;g++)b=d.indexOf(a,c),b=0>b?a.length:b,e+=m.escapeHtml(a.substring(c,b)),b<a.length&&(e+="\x3cstrong\x3e"+m.escapeHtml(a.substring(b,b+d.length))+"\x3c/strong\x3e"),c=b+d.length;return e}function B(a){function d(a){a.metadata.isDirectory?a.children.forEach(d):b[a.data.attr.href.substring(1)]=a}var b={};d(a);return b}function C(a){return k.fromBinder(function(d){a.diffs.forEach(function(a){var c=
new w(a.destination||a.source);(a.hunks||[]).forEach(function(a){a.segments.forEach(function(a){a.lines.forEach(function(b){d({path:c.toString(),type:a.type,lineNumber:"ADDED"===a.type?b.destination:b.source,line:b.line})})})})});d(new k.End);return n.noop})}function u(a,d,b){function c(a){a.children=a.children.filter(function(a){return a.metadata.isDirectory?c(a):a.children&&0<a.children.length});return 0<a.children.length}a.searchTruncated=b.truncated;var e=B(a);y.split(C(b).filter(function(a){return 0<=
d.indexOf(a.line)}),q.dot("path")).onValue(function(a){var b=h.reduce(a,function(a,b){return Math.max(a,b.lineNumber.toString().length)},0);a.forEach(function(a){var c=e[a.path];if(c){c.children=c.children||[];var g=new x(a.path,a.lineNumber,"ADDED"===a.type?"TO":"FROM"),f=bitbucket.internal.feature.difftree.searchTreeNode({changeType:a.type,lineNumber:a.lineNumber.toString(),padding:b,titleContent:t(a.line.trim(),d)});c.children.push({data:{title:f,attr:{"class":"jstree-search-leaf",title:a.line.trim(),
href:"#"+g.toString()}},metadata:h.extend({},c.metadata,{path:g})})}})});c(a);b={linesMatched:h.reduce(a.children,function(a,b){return a+b.children.length},0),filesMatched:a.children.length,searchTruncated:a.searchTruncated};p.trigger("bitbucket.internal.ui.diff-view.search.result.details",null,b);return a}function f(a){this.input=new v({placeholder:m.I18n.getText("bitbucket.web.difftree.search.placeholder")});this.caseSensitive=a;this._destroyables=[];this._destroyables.push(this.input);this._destroyables.push(p.chainWith(this.input.$el.closest("form")).on("submit",
q.invoke("preventDefault")));this._destroyables.push({destroy:A.bind("requestDiffTreeSearch",this.focusSearch.bind(this))})}f.prototype.register=function(a,d){var b=this,c=this.input.getInputs();return c.flatMap(function(e){if(!e)return k.fromArray([{data:d(),search:e}]);var g=n('\x3cdiv class\x3d"difftree-search-spinner"\x3e\x3c/div\x3e').prependTo(b.input.$el),f=b.input.$el.parent().find(".search-icon");f.addClass("invisible");g=z.spinner(g,a(e)).always(function(){f.removeClass("invisible")});return k.fromPromise(g,
!0).takeUntil(c).map(h.partial(u,n.extend(!0,{},d()),new r(e,b.caseSensitive))).map(function(a){return{data:a,search:e}})})};f.prototype.focusSearch=function(){this.trigger("search-focus");this.input.$el.find("input").focus()};h.extend(f.prototype,p.createEventMixin("diffTreeSearch",{localOnly:!0}));f.prototype.destroy=function(){h.invoke(this._destroyables,"destroy")};l.DiffTreeSearch=f;l._filterDiffTree=u;l._Text=r;l._decorateTitle=t});