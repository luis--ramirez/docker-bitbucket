define("bitbucket/internal/feature/tasks/tasks-overview/tasks-counter","bacon jquery lodash bitbucket/internal/feature/tasks/model/task-state bitbucket/internal/util/bacon bitbucket/internal/util/function".split(" "),function(g,h,e,d,f,k){function c(){this.init.apply(this,arguments)}c.prototype.init=function(){var a=this;this._destroyCallbacks=[];e.bindAll(this,"_mapEventData");this._taskCounterStream=g.mergeAll(e.map(["created","resolved","reopened","deleted","failed-transition"],function(b){return f.events("bitbucket.internal.feature.pull-request-tasks."+
b).map(a._mapEventData)})).merge(f.events("bitbucket.internal.feature.pull-request-tasks.set-counts"))};c.prototype.emptyCounter=function(a){return{openTaskCount:0,resolvedTaskCount:0,pullRequestId:a&&a.pullRequestId||null,repositoryId:a&&a.repositoryId||null}};c.prototype._mapEventData=function(a){var b=this.emptyCounter(a.task);switch(a.task.state){case d.OPEN:b.openTaskCount=1;break;case d.RESOLVED:b.resolvedTaskCount=1}switch(a.task.lastState){case d.OPEN:b.openTaskCount=-1;break;case d.RESOLVED:b.resolvedTaskCount=
-1}return b};c.prototype.countPropertyForPullRequest=function(a,b){var c=this,d=this._taskCounterStream.merge(b).filter(function(b){return b.pullRequestId===a.pullRequestId&&b.repositoryId===a.repositoryId}).scan(this.emptyCounter(a),function(a,b){b.isReset&&(a=c.emptyCounter(b));a.openTaskCount+=b.openTaskCount;a.resolvedTaskCount+=b.resolvedTaskCount;return a});this._destroyCallbacks.push(d.onValue(h.noop));return d};c.prototype.destroy=function(){k.applyAll(this._destroyCallbacks)};return c});