define("bitbucket/internal/feature/tasks/task-analytics","jquery lodash bitbucket/util/events bitbucket/util/state bitbucket/internal/feature/tasks/model/task bitbucket/internal/feature/tasks/model/task-collection bitbucket/internal/feature/tasks/model/task-state bitbucket/internal/util/analytics exports".split(" "),function(k,n,u,e,p,v,w,x,y){function d(a,b){x.add("pullRequest.task."+a,b)}function g(a,b){var c;if(a){c=a.text.length;var h=a.id,d;d=a.createdDate;d=Date.now()-d;c={"task.text.length":c,
"task.id":h,"task.time.since.created":d}}h=k("#task-list-dialog");h.length&&"false"===h.attr("aria-hidden")?h=l.TASK_LIST:(h=k(".active-tab[data-module-key]").attr("data-module-key"),h=n.endsWith(h,"diff")?l.DIFF:n.endsWith(h,"commits")?l.COMMITS:l.ACTIVITY_STREAM);d=e.getPullRequest().id;var g=e.getRepository().id,f;f=m()?"author":q()?"reviewer":z()?"participant":"other";return k.extend({},{source:h,"pullRequest.id":d,"repository.id":g,userRole:f},b,c)}function A(a){d("resolved."+f.taskTransitionAction(a.task),
g(a.task))}function B(a){d("reopened."+f.taskTransitionAction(a.task),g(a.task))}function C(a){r=Date.now();var b="keyboard-shortcut";a&&a.sourceEl&&(b="link");d("list.opened."+f.genericAction(),g(null,{"source.secondary":b}))}function D(){var a="list.closed."+f.genericAction(),b;b=r;b=Date.now()-b;d(a,g(null,{age:b}))}function E(a){d("list.expandTask."+f.genericAction(),g(a.model.toJSON()))}function F(a){var b="gotoTask";"diff"===a.location&&(b="gotoFile");d("list."+b+"."+f.genericAction(),g(a.task))}
function G(a){var b=a.toJSON(),c;b.anchor.type===p.Anchor.COMMENT&&(b.anchor.type!==p.Anchor.COMMENT?c=null:(c=k('.comment[data-id\x3d"'+b.anchor.id+'"]'),c={text:c.find("\x3e .content \x3e .message").text(),author:c.find("span[data-username]").attr("data-username")}),c={"is.comment.owner":c.author===e.getCurrentUser().name,"duplicates.comment":b.text.trim()===c.text.trim()});d("created."+(a.prefilled?"prefilled.":"")+f.genericAction(),g(b,c))}function H(a){if(!a.isNew()){var b=a.getState()===w.RESOLVED;
(m()||e.getCurrentUser().isAdmin||t(a.toJSON()))&&!b&&a.attributes.text!==a._previousAttributes.text&&d("edited."+f.taskAction(a.toJSON(),!0),g(a.toJSON()))}}function I(a){a.isNew()||d("deleted."+f.taskAction(a.toJSON(),!0),g(a.toJSON()))}function m(){return e.getCurrentUser().id===e.getPullRequest().author.user.id}function q(){var a=e.getPullRequest().reviewers;return a.length&&a.some(function(a){return a.user.id===e.getCurrentUser().id})}function z(){var a=e.getPullRequest().participants;return a.length&&
a.some(function(a){return a.user.id===e.getCurrentUser().id})}function t(a){return e.getCurrentUser().name===a.author.name}var l={ACTIVITY_STREAM:"activity-stream",COMMITS:"commits-tab",DIFF:"diff-tab",TASK_LIST:"task-list"},J=v.getCollection(),r,f={Type:{other:"byOther",PRAuthor:"byPRAuthor",taskAuthor:"byTaskAuthor",admin:"byAdmin",reviewer:"byReviewer"},genericAction:function(){var a=this.Type.other;m()?a=this.Type.PRAuthor:q()&&(a=this.Type.reviewer);return a},taskAction:function(a,b){var c=this.Type.other;
b=!!b;e.getCurrentUser().isAdmin&&b&&(c=this.Type.admin);m()?c=this.Type.PRAuthor:t(a)&&(c=this.Type.taskAuthor);return c},taskTransitionAction:function(a){return this.taskAction(a,!1)}};y.init=function(){u.chain().on("bitbucket.internal.feature.pull-request-tasks.resolved",A).on("bitbucket.internal.feature.pull-request-tasks.reopened",B).on("bitbucket.internal.feature.tasks.list.opened",C).on("bitbucket.internal.feature.tasks.list.closed",D).on("bitbucket.internal.feature.tasks.list.expand",E).on("bitbucket.internal.feature.tasks.visit-task",
F);J.on("change:id",G).on("change:text",H).on("destroy",I)}});