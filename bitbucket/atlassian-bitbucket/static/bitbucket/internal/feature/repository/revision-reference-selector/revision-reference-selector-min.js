define("bitbucket/internal/feature/repository/revision-reference-selector","aui jquery lodash bitbucket/util/navbuilder bitbucket/internal/model/page-state bitbucket/internal/model/repository bitbucket/internal/model/revision-reference bitbucket/internal/util/ajax bitbucket/internal/util/events bitbucket/internal/widget/searchable-selector".split(" "),function(h,d,e,k,m,n,c,p,l,f){function b(a,g){return this.init.apply(this,arguments)}d.extend(b.prototype,f.prototype);b.prototype._addRefTypeAndRepositoryToResults=
function(a){if(a&&a.values){a=d.extend(!0,{},a);var g=this._getCurrentType();e.each(a.values,e.bind(function(a){a.type=g;a.repository||(a.repository=this.repository&&this.repository.toJSON())},this))}return a};b.prototype.defaults=d.extend(!0,{},f.prototype.defaults,{tabs:[{label:"Branches",type:c.type.BRANCH,url:function(){return this.getBranchesUrl()},resultsTemplate:bitbucket.internal.feature.repository.revisionReferenceSelectorBranchResults,searchPlaceholder:h.I18n.getText("bitbucket.web.revisionref.selector.branch.search.placeholder")},
{label:"Tags",type:c.type.TAG,url:function(){return this.getTagsUrl()},resultsTemplate:bitbucket.internal.feature.repository.revisionReferenceSelectorTagResults,searchPlaceholder:h.I18n.getText("bitbucket.web.revisionref.selector.tag.search.placeholder")},{label:"Commits",type:c.type.COMMIT,url:function(){return this.getCommitsUrl()},resultsTemplate:bitbucket.internal.feature.repository.revisionReferenceSelectorCommitResults,searchPlaceholder:h.I18n.getText("bitbucket.web.revisionref.selector.commit.search.placeholder")}],
queryParamKey:"filterText",namespace:"revision-reference-selector",itemSelectedEvent:"bitbucket.internal.feature.repository.revisionReferenceSelector.revisionRefChanged",itemUnselectedEvent:"bitbucket.internal.feature.repository.revisionReferenceSelector.revisionRefUnselected",itemDataKey:"revision-ref",statusCodeHandlers:p.ignore404WithinRepository(),triggerContentTemplate:bitbucket.internal.feature.repository.revisionReferenceSelectorTriggerContent,extraClasses:"revision-reference-selector",repository:function(){return m.getRepository()},
show:{branches:!0,tags:!0,commits:!1},dataTransform:b.prototype._addRefTypeAndRepositoryToResults,postOptionsInit:function(){this.setRepository(this._getOptionVal("repository"))},paginationContext:"revision-reference-selector"});b.prototype.init=function(a,g){f.prototype.init.apply(this,arguments);return this};b.prototype.setOptions=function(a){a.extraClasses&&(a.extraClasses=this.defaults.extraClasses+" "+d.trim(a.extraClasses));a=d.extend(!0,{},this.defaults,a);var g=e.filter({branches:c.type.BRANCH.id,
tags:c.type.TAG.id,commits:c.type.COMMIT.id},function(g,b){return a.show[b]});a.tabs=e.filter(a.tabs,function(a){return-1!==e.indexOf(g,a.type.id)});this.options=a};b.prototype._getItemFromTrigger=function(){var a=this.$trigger.find(".name");return new c(d.extend({},this._buildObjectFromElementDataAttributes(a),{displayId:a.text(),repository:this.repository}))};b.prototype.getBranchesUrl=function(){return k.rest().project(this.repository.getProject()).repo(this.repository).branches().build()};b.prototype.getTagsUrl=
function(){return k.rest().project(this.repository.getProject()).repo(this.repository).tags().build()};b.prototype.getCommitsUrl=function(){return k.rest().project(this.repository.getProject()).repo(this.repository).commits().build()};b.prototype.getRepository=function(){return this.repository};b.prototype.setRepository=function(a){var b=this.repository;if(a instanceof n&&!a.isEqual(b)&&(this.repository=a,b)){if(b=this._getCurrentScrollable())this._emptyScrollable(b),b.init();this.clearSelection();
this.dialog.hide();l.trigger("bitbucket.internal.feature.repository.revisionReferenceSelector.repoChanged",this,a,this._getOptionVal("context"))}};b.prototype._getCurrentType=function(){return this.tabs[this.currentTabId||0].type};b.prototype.setSelectedItem=function(a){a instanceof c&&!a.isEqual(this._selectedItem)&&this._itemSelected(a)};b.prototype.clearSelection=function(){f.prototype.clearSelection.apply(this,arguments);l.trigger(this._getOptionVal("itemUnselectedEvent"),this,null,this._getOptionVal("context"))};
b.prototype._itemSelected=function(a){var b;a instanceof c?b=a.toJSON():(b=e.pick(a,e.keys(c.prototype.namedAttributes)),a=new c(b));this._selectedItem=a;this._getOptionVal("field")&&d(this._getOptionVal("field")).val(b.id);var f=bitbucket.internal.feature.repository.revisionReferenceSelectorTitle({ref:b});this.updateTrigger({ref:b},f);l.trigger(this._getOptionVal("itemSelectedEvent"),this,a,this._getOptionVal("context"))};return b});