define("bitbucket/internal/feature/filebrowser/file-table-history","jquery lodash bitbucket/util/events bitbucket/util/navbuilder bitbucket/util/server bitbucket/internal/model/page-state bitbucket/internal/util/analytics bitbucket/internal/util/parse-commit-message exports".split(" "),function(g,n,d,h,p,k,f,q,r){function l(){a&&a.abort()}function m(){l();var b=k.getRevisionRef(),b=b.isCommit()?b.getId():b.getLatestCommit(),d=k.getFilePath().getComponents();a=p.rest({url:h.rest().currentRepo().lastModified().path(d).at(b).build(),
statusCode:{404:!1,500:!1,0:function(d,b){if("timeout"===b)return f.add("filetable.lastmodified.timeout"),!1;if("abort"===b)return f.add("filetable.lastmodified.aborted",{requestTime:Date.now()-c}),!1}}}).done(function(b){f.add("filetable.lastmodified.succeeded",{requestTime:Date.now()-c});var a=g(".filebrowser-table");a.find("tr.file").each(function(){var a=g(this),c=a.data("item-name"),e=b.files[c];e&&(c=h.currentRepo().commit(e.id).withFragment(d.concat(c).join("/")).build(),e.shortMessage=q.splitIntoSubjectAndBody(e.message).subject,
a.append(bitbucket.internal.widget.filetablehistory.row({commit:e,fileUrl:c})),a.find(".item-name").removeAttr("colspan"))});n.defer(function(){a.find("td.hide").removeClass("hide")})}).always(function(){c=a=null});c=Date.now()}var a,c;r.init=function(){d.on("bitbucket.internal.feature.filebrowser.filesChanged",m);d.on("bitbucket.internal.feature.filefinder.unloaded",m);d.on("bitbucket.internal.feature.filefinder.loaded",l)}});