define("bitbucket/internal/widget/client-file-handlers/client-file-reader",["jquery","lodash","bitbucket/internal/util/feature-detect","bitbucket/internal/widget/client-file-handlers/client-file-handler"],function(c,d,f,b){function a(g){if(!a.isSupported())throw Error("ClientFileReader requires FileReaderAPI support");return this.init(g)}var e={ArrayBuffer:"readAsArrayBuffer",BinaryString:"readAsBinaryString",DataURL:"readAsDataURL",Text:"readAsText"};a.isSupported=f.fileReader;c.extend(a.prototype,
b.prototype);a.readMethods={ArrayBuffer:"ArrayBuffer",BinaryString:"BinaryString",DataURL:"DataURL",Text:"Text"};a.typeFilters=b.typeFilters;a.prototype.defaults=c.extend({},b.prototype.defaults,{readMethod:a.readMethods.DataURL,onRead:c.noop});a.prototype.init=function(a){d.bindAll(this,"onSuccess","readFile");b.prototype.init.call(this,a);this.options.onSuccess=this.onSuccess;return this};a.prototype.onSuccess=function(a){var b=d.has(e,this.options.readMethod)?e[this.options.readMethod]:void 0;
b&&d.each(a,d.bind(function(a){var c=new FileReader;c.onload=d.bind(this.readFile,this,a);c[b](a)},this))};a.prototype.readFile=function(a,b){d.isFunction(this.options.onRead)&&this.options.onRead(b.target.result,a)};return a});