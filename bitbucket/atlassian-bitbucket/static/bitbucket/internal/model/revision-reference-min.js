define("bitbucket/internal/model/revision-reference",["aui","backbone-brace","lodash","bitbucket/internal/model/page-state","bitbucket/internal/model/repository"],function(d,g,h,k,l){var b={TAG:{id:"tag",name:d.I18n.getText("bitbucket.web.revisionref.tag.name")},BRANCH:{id:"branch",name:d.I18n.getText("bitbucket.web.revisionref.branch.name")},COMMIT:{id:"commit",name:d.I18n.getText("bitbucket.web.revisionref.commit.name")},isTag:function(a){return a&&(a===b.TAG.id||a.id===b.TAG.id||"TAG"===a)},isBranch:function(a){return a&&
(a===b.BRANCH.id||a.id===b.BRANCH.id||"BRANCH"===a)},isCommit:function(a){return a&&(a===b.COMMIT.id||a.id===b.COMMIT.id)},from:function(a){if(b.isTag(a))return b.TAG;if(b.isBranch(a))return b.BRANCH;if(b.isCommit(a))return b.COMMIT;window.console&&console.error("Unknown RevisionReference type "+a);return null}},c=g.Model.extend({namedAttributes:{id:"string",displayId:"string",type:b.from,isDefault:"boolean",latestCommit:"string",hash:"string",repository:l},initialize:function(){this.getDisplayId()||
this.setDisplayId(this.getId());this.getIsDefault()||this.setIsDefault(!1);this.getRepository()||this.setRepository(k.getRepository())},getTypeName:function(){return this.getType().name},isDefault:function(){return this.get("isDefault")||!1},isTag:function(){return b.isTag(this.getType())},isBranch:function(){return b.isBranch(this.getType())},isCommit:function(){return b.isCommit(this.getType())},isEqual:function(a){return a instanceof c&&this.getId()===a.getId()&&this.getType().id===a.getType().id&&
this.getRepository().isEqual(a.getRepository())}},{fromCommit:function(a){return new c({id:a.id,displayId:a.displayId,type:b.COMMIT,isDefault:!1})},hydrateRefFromId:function(a,b,e,d){if(!h.isString(a))return null;var f=/^refs\/(heads|tags)\/(.+)/,g=a.replace(f,"$2");e||(e=c.type.BRANCH,(f=a.match(f))&&"tags"===f[1]&&(e=c.type.TAG));return new c({id:a,displayId:g,type:e,isDefault:b,latestCommit:d})},hydrateDeprecated:function(a){return a.__json?new c(a.__json):new c(a.toJSON())}});c.type=b;return c});