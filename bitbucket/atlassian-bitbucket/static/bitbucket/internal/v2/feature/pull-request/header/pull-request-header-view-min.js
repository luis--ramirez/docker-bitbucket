var _react=require("react"),_react2=babelHelpers.interopRequireDefault(_react);
define("bitbucket/internal/v2/feature/pull-request/header/pull-request-header-view","aui aui/flag jquery lodash react react-redux bitbucket/util/navbuilder bitbucket/internal/bbui/models/models bitbucket/internal/bbui/pull-request-header/pull-request-header bitbucket/internal/feature/pull-request-edit bitbucket/internal/model-transformer bitbucket/internal/model/page-state bitbucket/internal/model/participant bitbucket/internal/model/pull-request bitbucket/internal/util/ajax bitbucket/internal/util/events bitbucket/internal/util/shortcuts bitbucket/internal/widget/submit-spinner ../action-creators/can-merge ../action-creators/change-reviewer-status ../action-creators/change-self-reviewer ../action-creators/watch".split(" "),function(c,
A,h,g,m,B,C,l,D,E,r,f,F,G,t,e,u,z,H,I,J,v){function K(){function b(a){var b=a.approved?c.I18n.getText("bitbucket.web.pullrequest.toolbar.approved.updateflag"):c.I18n.getText("bitbucket.web.pullrequest.toolbar.unapproved.updateflag");d(b,a)}function a(a){var b=a.watchState?c.I18n.getText("bitbucket.web.watchable.watched.tooltip"):c.I18n.getText("bitbucket.web.watchable.unwatched.tooltip");d(b,a)}function d(a,b){g.isMatch(b,w)&&(k&&k.close(),k=A({type:"success",title:a,close:"auto"}))}var k;e.on("bitbucket.internal.widget.approve-button.added",
b);e.on("bitbucket.internal.widget.approve-button.removed",b);e.on("bitbucket.internal.web.watch-button.added",a);e.on("bitbucket.internal.web.watch-button.removed",a)}function L(){h(this).closest(".commit-message-form").removeClass("collapsed")}function p(b){b.$el.find(".commit-message").val("");b.$el.find(".commit-message-form").addClass("collapsed")}function q(b,a){b.$el.find(".aui-dialog2-footer-actions .aui-button").each(function(){var b=h(this);b.prop("disabled",a).toggleClass("disabled",a);
a?b.attr("aria-disabled","true"):b.removeAttr("aria-disabled")})}function x(b,a){var d=C.rest().currentPullRequest()[b]().withParams({avatarSize:bitbucket.internal.widget.avatarSizeInPx({size:"xsmall"})});a&&(d=d.withParams({version:f.getPullRequest().getVersion()}));return d.build()}function M(b){var a=c.dialog2(bitbucket.internal.feature.pullRequest.merge.dialog(b.dialog));h("body").append(a.$el);var d,k;a.$el.find(".confirm-button").on("click",function(){var c=new z(this,"before");q(a,!0);c.show();
var n=d=t.rest(h.extend({url:x("merge",!0),type:"POST",data:{message:a.$el.find("#commit-message").val()}},b.ajax));d.fail(function(b,d,n,c){400===b.status||409===b.status?(b=a.$el.find(".aui-dialog2-content"),c.errors&&(b.children(".aui-message").remove(),b.prepend(bitbucket.internal.feature.pullRequest.merge.errors({errors:c.errors})))):a.hide()}).always(function(){d=null;c.hide();q(a,!1)});if(!k)try{k=require("pullRequest/branchDeletion").getMergePromiseDecorator}catch(P){}if(k){var g=k(n,function(){a.hide()});
g&&(n=g)}n.done(function(a){e.trigger("bitbucket.internal.feature.pullRequest.merged",null,{user:f.getCurrentUser().toJSON(),pullRequest:a});b.callback(a)})});a.$el.find(".cancel-button").on("click",function(){d&&(d.abort(),d=null);p(a);a.hide()});a.$el.find(".commit-message").on("focus",L);a.$el.find(".cancel-commit-message-link").click(function(b){b.preventDefault();p(a)});a.on("hide",function(){p(a)});a.$el.on("click",".view-merge-veto-details-button",function(){a.hide();e.trigger("bitbucket.internal.pull-request.show.cant.merge.help")});
return a}function N(b){var a=c.dialog2(bitbucket.internal.feature.pullRequest.decline.dialog({content:b.confirmDialog.content}));h("body").append(a.$el);var d;a.$el.find(".confirm-button").on("click",function(){var c=new z(this,"before");q(a,!0);c.show();var g=d=t.rest(h.extend({url:x("decline",!0),type:"POST"},b.ajax));d.fail(function(b,d,c,e){400===b.status?(b=a.$el.find(".aui-dialog2-content"),e.errors&&(b.children(".aui-message").remove(),b.prepend(bitbucket.internal.feature.pullRequest.decline.errors({errors:e.errors})))):
a.hide()}).always(function(){c.hide();q(a,!1);d=null});g.done(function(a){e.trigger("bitbucket.internal.feature.pullRequest.declined",null,{user:f.getCurrentUser().toJSON(),pullRequest:a});b.callback(a)})});a.$el.find(".cancel-button").on("click",function(){d&&(d.abort(),d=null);a.hide()});return a}var w={triggeredBy:"keyboardShortcut"},y,O=m.createClass({displayName:"PullRequestHeaderView",propTypes:{hasRepoWrite:m.PropTypes.bool.isRequired,mergeTimeout:m.PropTypes.number},getInitialState:function(){return{}},
toggleWatch:function(b){this.props.dispatch(v(g.merge({},{watchState:!this.props.pullRequest.isWatching},b)))},mergeCheck:function(){this.props.pullRequest.state===l.PullRequestState.OPEN&&this.props.dispatch(H(new G(this.props.pullRequest._stash)))},initMergeThings:function(){var b=this;this.mergeCheck();e.on("bitbucket.internal.feature.pull-request.merge-check",this.mergeCheck);y=f.getPullRequest();var a=this.props.mergeTimeout,a={dialog:{person:f.getCurrentUser()&&f.getCurrentUser().toJSON(),pullRequest:y.toJSON()},
ajax:{statusCode:{400:function(){return!1},401:function(b,a,e,f,g){return h.extend({},g,{title:c.I18n.getText("bitbucket.web.pullrequest.merge.error.401.title"),message:c.I18n.getText("bitbucket.web.pullrequest.merge.error.401.message"),fallbackUrl:!1,shouldReload:!0})},409:function(a,c,g,f,h){if((a=f.errors&&f.errors.length&&f.errors[0])&&(a.conflicted||a.vetoes&&a.vetoes.length))return e.trigger("bitbucket.internal.pull-request.cant.merge",null,y,a.conflicted,a.vetoes),"false"!==b.mergeDialog.$el.attr("aria-hidden")&&
e.trigger("bitbucket.internal.pull-request.show.cant.merge.help"),!1}},timeout:1E3*(a||300)},callback:function(a){b.updatePullRequest(r.pullRequest(a),!0);b.mergeDialog.hide()}};this.mergeDialog=M(a);e.on("bitbucket.internal.branch.plugin.conflict.merge.help",function(a){b.setState({mergeHelp:a})});e.on("bitbucket.internal.pull-request.show.cant.merge.help",function(){b.setState({showMergeHelpDialog:!0})})},initDeclineButton:function(b){var a=this;b={buttonSelector:".decline-pull-request",confirmDialog:{content:"\x3cp class\x3d'decline-message'\x3e"+
c.I18n.getText("bitbucket.web.pullrequest.decline.dialog.message")+"\x3c/p\x3e"},ajax:{statusCode:{401:function(a,b,e,f,g){return h.extend({},g,{title:c.I18n.getText("bitbucket.web.pullrequest.decline.error.401.title"),message:c.I18n.getText("bitbucket.web.pullrequest.decline.error.401.message"),fallbackUrl:!1,shouldReload:!0})}}},callback:function(b){a.updatePullRequest(r.pullRequest(b),!0);a.declineDialog.hide()}};this.declineDialog=N(b)},componentDidMount:function(){var b=f.getPullRequest();this._pullRequestEdit=
new E(b);var a=this;u.bind("pullRequestApprove",function(){a.onStatusClick(g.merge({newStatus:(a.props.currentUserAsReviewer&&a.props.currentUserAsReviewer.state)===l.ApprovalState.APPROVED?l.ApprovalState.UNAPPROVED:l.ApprovalState.APPROVED},w))});u.bind("pullRequestEdit",function(){b.getState()!==l.PullRequestState.MERGED&&a._pullRequestEdit.show()});h(document).on("click",".add-description",function(){a._pullRequestEdit.show()});u.bind("pullRequestWatch",function(){a.toggleWatch(w)});e.once("bitbucket.internal.feature.comments.commentAdded",
function(){[b.getAuthor().toJSON()].concat(b.getReviewers().toJSON()).concat(b.getParticipants().toJSON()).some(function(a){return a.user.name===f.getCurrentUser().id})||(b.setParticipants(b.getParticipants().toJSON().concat([new F({user:f.getCurrentUser()})])),a.toggleWatch({watchState:!0}))});this.initMergeThings();this.initDeclineButton();K()},onMoreAction:function(b){switch(b){case "edit":this._pullRequestEdit.show();break;case "watch":this.toggleWatch();break;case "decline":this.declineDialog.show()}},
onMergeClick:function(){this.mergeDialog.show();p(this.mergeDialog);this.mergeDialog.$el.find(".confirm-button").focus()},onReOpenClick:function(){var b=this;return t.rest({url:x("reopen",!0),type:"POST"}).done(function(a){e.trigger("bitbucket.internal.feature.pullRequest.reopened",null,{user:f.getCurrentUser().toJSON(),pullRequest:a});b.updatePullRequest(r.pullRequest(a),!0);b.mergeCheck()})},onSelfClick:function(b,a){this.props.dispatch(J(this.props.pullRequest,this.props.currentUser,b,this.props.currentUserAsReviewer&&
this.props.currentUserAsReviewer.state));"ADD_SELF"===b&&this.props.dispatch(v({stateOnly:!0,watchState:!0}));a&&this.props.dispatch(v({watchState:!1}))},onStatusClick:function(b){this.props.currentUserAsReviewer?this.props.dispatch(I(g.merge({pullRequest:this.props.pullRequest,user:this.props.currentUser,oldStatus:this.props.currentUserAsReviewer.state},b))):console.warn("Current user is not a reviewer")},onMergeHelpDialogClose:function(){this.setState({showMergeHelpDialog:!1})},getConditions:function(){var b=
this.props.pullRequest.author.user.name===this.props.currentUser.name,a=this.props.hasRepoWrite,b=a||b;return{canMerge:a,canDecline:b,canEdit:b,canReOpen:b}},updatePullRequest:function(b,a){b._stash&&f.getPullRequest().set(b._stash);!0===a&&this.props.dispatch({type:"PR_SET_PULL_REQUEST",payload:b})},render:function(){var b={pullRequest:this.props.pullRequest,conditions:this.getConditions(),currentUser:this.props.currentUser,currentUserAsReviewer:this.props.currentUserAsReviewer,currentUserIsWatching:this.props.pullRequest.isWatching,
mergeHelp:this.state.mergeHelp,onMoreAction:this.onMoreAction,currentUserStatus:this.props.currentUserAsReviewer&&this.props.currentUserAsReviewer.state,onMergeClick:this.onMergeClick,onReOpenClick:this.onReOpenClick,onSelfClick:this.onSelfClick,onStatusClick:this.onStatusClick,permissionToReview:this.props.currentUser.name!==this.props.pullRequest.author.user.name,showMergeHelpDialog:this.state.showMergeHelpDialog,onMergeHelpDialogClose:this.onMergeHelpDialogClose};return m.createElement(D,b)}});
return B.connect(function(b){return{pullRequest:b.pullRequest,currentUser:b.currentUser,currentUserAsReviewer:function(){return g.find(b.pullRequest.reviewers,function(a){return a.user.name===b.currentUser.name})}()}})(O)});